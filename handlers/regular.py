from subprocess import check_output
from aiogram import types, Dispatcher
from init_bot import dp
from keyboard import regular_kb
from pytils.dt import distance_of_time_in_words
from misc import create_task, cat_pic
from main import start_time
from log import logger
from parse import group_today_rasp, group_tommorrow_rasp

# @dp.message_handler(commands=["start"])
async def start(message: types.Message):
    kb = [
    "/FAQ",
    "/Today",
    "/Tomorrow",
    "/Subscribe"
    ]
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.add(*kb)
    logger.info(
        f"Issued \"start\" from {message.from_user.username} ({message.from_user.full_name}) [{message.from_user.id}]")
    create_task(message.reply("""Disclaimer: –ë–æ—Ç –Ω–µ –≤—ã–¥–∞–µ—Ç –∏—Å—Ç–∏–Ω—ã –ø–æ—Å–ª–µ–¥–Ω–µ–π –∏–Ω—Å—Ç–∞–Ω—Ü–∏–∏, –≤—Å—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç—Å—è –Ω–∞ —É—Å–ª–æ–≤–∏—è—Ö \"–∫–∞–∫ –µ—Å—Ç—å\" –±–µ–∑ –∫–∞–∫–∏—Ö-–ª–∏–±–æ –≥–∞—Ä–∞–Ω—Ç–∏–π –ø–æ–ª–Ω–æ—Ç—ã, —Ç–æ—á–Ω–æ—Å—Ç–∏. –ù–µ –∑–∞–º–µ–Ω—è–µ—Ç –ø—Ä–æ—Å–º–æ—Ç—Ä —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –Ω–∞ —Å–∞–π—Ç–µ, –∞ —Ç–∞–∫–∂–µ –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —á—å–∏–º-–ª–∏–±–æ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–º –ø—Ä–æ–µ–∫—Ç–æ–º.
–ü—Ä–æ–µ–∫—Ç –≤—Å–µ –µ—â–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è —Å—Ç–∞–¥–∏–∏ –æ—á–µ–Ω—å —Ä–∞–Ω–Ω–µ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏, –ø–æ—ç—Ç–æ–º—É –º–æ–≥—É—Ç –±—ã—Ç—å –Ω–µ—Ç–æ—á–Ω–æ—Å—Ç–∏ –∏ –º–Ω–æ–≥–∏–µ –¥—Ä—É–≥–∏–µ –ø—Ä–µ–ª–µ—Å—Ç–∏ –Ω–µ–æ—Ç–ª–∞–∂–µ–Ω–Ω–æ–≥–æ –∫–æ–¥–∞.
–ï—Å–ª–∏ –≤—ã –∑–Ω–∞–µ—Ç–µ —á—Ç–æ –º–æ–∂–Ω–æ –ø–æ–ø—Ä–∞–≤–∏—Ç—å, —Ç–æ –ø–∏—à–∏—Ç–µ.
–î—Ä—É–≥–∏–µ –≥—Ä—É–ø–ø—ã –ø–æ–º–∏–º–æ –ò—Ä1-20 –ø–æ–∫–∞ —á—Ç–æ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç...
–ê–ø—Ç–∞–π–º –±–æ—Ç–∞ –æ—á–µ–Ω—å –∑–∞–≤–∏—Å–∏—Ç –æ—Ç –º–æ–µ–≥–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è –∏ –ø–æ—ç—Ç–æ–º—É –±–æ—Ç –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–µ –≤—Å–µ–≥–¥–∞ –¥–æ—Å—Ç—É–ø–µ–Ω 24/7 :)""", reply_markup=keyboard))

# @dp.message_handler(commands=["FAQ", "faq"])
async def faq(message: types.Message):
    logger.info(
        f"Issued \"FAQ\" from {message.from_user.username} ({message.from_user.full_name}) [{message.from_user.id}]")
    create_task(message.answer("""FAQ:
1\)Q: –ü–æ—á–µ–º—É –±–æ—Ç —Ç–∞–∫–æ–π –∫—Ä–∏–≤–æ–π?
  A: –ü–æ—Ç–æ–º—É —á—Ç–æ, –±—é–¥–∂–µ—Ç–∞ –Ω–µ —Ö–≤–∞—Ç–∏–ª–æ –¥–∞–∂–µ –Ω–∞ –±–∞–Ω–∫—É –ø–∏–≤–∞ –∏ —Ä–∞–∑—Ä–∞–±–∞—Ç—ã–≤–∞–ª–æ –≤—Å–µ —ç—Ç–æ –¥–æ–ª–±–æ–µ–±\(–∫–∞\) –Ω–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ
2\)Q: –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –¥—Ä—É–≥–∏—Ö –≥—Ä—É–ø–ø?
  A: –ö–æ–≥–¥–∞\-–Ω–∏–±—É–¥—å –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –¥—Ä—É–≥–∏—Ö –≥—Ä—É–ø–ø –ø–æ—è–≤–∏—Ç—Å—è \(—Ä–∞–±–æ—Ç—ã –≤ —ç—Ç–æ–º –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–∏ —É–∂–µ –≤–µ–¥—É—Ç—Å—è, stay tuned \(–≤—Å—è —Å–≤–µ–∂–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –≤ –Ω–∞—à–µ–º –¥–∏—Å–∫–æ—Ä–¥ —Å–µ—Ä–≤–µ—Ä–µ https://discord\.gg/YVrasmddPv\)\)\.
3\)Q: –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –¥—Ä—É–≥–∏—Ö –∫–æ—Ä–ø—É—Å–æ–≤?
  A: –°–∫–æ—Ä–µ–µ –Ω–µ—Ç, —á–µ–º –¥–∞, –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –¥—Ä—É–≥–∏—Ö –∫–æ—Ä–ø—É—Å–æ–≤ –ø–æ—Ç—Ä–µ–±—É–µ—Ç –±–æ–ª—å—à–æ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Ä–∞–±–æ—Ç—ã –∏ —Å–∫–æ—Ä–µ–µ –≤—Å–µ–≥–æ –Ω–µ –±—É–¥–µ—Ç —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞\.
4\)Q: –°–∫–æ–ª—å–∫–æ –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å —ç—Ç–æ—Ç –±–æ—Ç?
  A: –î–∞\.
5\)Q: –ö–æ–¥ –±—É–¥–µ—Ç –≤—ã–ª–æ–∂–µ–Ω?
  A: https://github\.com/SatSea/Chemk\-Rasp\-Parser\-To\-Telegram
6\)Q: –ï–±–Ω–∏ –∞–Ω–µ–∫–¥–æ—Ç
  A: –ë—ã–ª —Ç–∞–∫–æ–π –ª–µ–≥–µ–Ω–¥–∞—Ä–Ω—ã–π –º—É–∂–∏–∫, –∫–æ—Ç–æ—Ä—ã–π –≤ 20\-–µ –≥–æ–¥—ã –Ω–∞–ø–∏—Å–∞–ª –ø–∏—Å—å–º–æ –≤ –ß–≠–ú–ö\. –ù–∞–ø–∏—Å–∞–ª –æ–Ω –ø—Ä–∏–º–µ—Ä–Ω–æ —Å–ª–µ–¥—É—é—â–µ–µ: "–Ø —É–∂–µ 3 –≥–æ–¥–∞ —Å—á–∏—Ç–∞—é —Ç–∞–±–ª–∏—Ü—ã —Å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ–º —É –≤–∞—Å –Ω–∞ —Å–∞–π—Ç–µ \- –∏—Ö —Ç–æ 2, —Ç–æ 3, —Ç–æ 4, –∞ –∏–Ω–æ–≥–¥–∞ –∏ 1\. –í—ã —Ç–∞–º —Å—É–º–∞—Å—à–µ–¥—à–∏–µ —á—Ç–æ –ª–∏ –≤—Å–µ?\"
8\)Q: –ö—Ç–æ –ø—Ä–∏–Ω–∏–º–∞–ª —É—á–∞—Å—Ç–∏–µ –≤ —Å–æ–∑–¥–∞–Ω–∏–∏ –±–æ—Ç–∞?
  A: /About
9\)Q: –ó–∞–ø–æ—Å—Ç–∏ –∫–æ—Ç–∞
  A: /cat
10\)Q: –ö–∞–∫ –º–æ–∂–Ω–æ –ø–æ–º–æ—á—å –Ω–∞–º?
  A: –ù–∞–ø–∏—Å–∞—Ç—å –æ —Ç–æ–º, —á—Ç–æ –≤—ã –±—ã —Ö–æ—Ç–µ–ª–∏ –ø–æ–º–µ–Ω—è—Ç—å/–∏—Å–ø—Ä–∞–≤–∏—Ç—å \(–ù–∞–º —Ç—è–∂–µ–ª–æ–≤–∞—Ç—å –∑–∞ –≤—Å–µ–º —É—Å–ª–µ–¥–∏—Ç—å\)
11\)Q: –ú–æ–∂–µ—Ç –±—ã—Ç—å —Ö–≤–∞—Ç–∏—Ç –¥–æ–±–∞–≤–ª—è—Ç—å —Å–º–µ—à–Ω—è–≤–∫–∏/–∫—Ä–∏–Ω–∂?
  A: Nein
12\)Q: –ù—É —á–µ, –∫–æ–≥–¥–∞ –æ–±–Ω–æ–≤—ã?
  A: –ö–æ–≥–¥–∞\-–Ω–∏–±—É–¥—å
13\)Q: –û–ø—è—Ç—å –±–æ—Ç –Ω–µ –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω –ø–æ—Å–ª–µ –æ–±–Ω–æ–≤?
  A: –í–æ–∑–º–æ–∂–Ω–æ –æ–ø—è—Ç—å —Å —ç—Ç–∏–º –ø—Ä–æ–µ–±–∞–ª–∏—Å—å, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å —Ö—ç—à –∫–æ–º–º–∏—Ç–∞ –∏—Å–ø–æ–ª—å–∑—É–π /status –∏ –µ—Å–ª–∏ –æ–Ω –Ω–µ —Å–æ–≤–ø–∞–¥–∞–µ—Ç —Å —Ç–µ–º, —á—Ç–æ –Ω–∞ –≥–∏—Ç—Ö–∞–±–µ, —Ç–æ –º—ã –ø—Ä–æ–æ–µ–±–∞–ª–∏—Å—å, –∏–∑–≤–∏–Ω–∏—Ç–µ\. –ú—ã üêå\.
  """, parse_mode='MarkdownV2'))

@dp.message_handler(commands=["Status", "status"])
async def status(message: types.Message):
    logger.info(
        f"Issued \"Status\" from {message.from_user.username} ({message.from_user.full_name}) [{message.from_user.id}]")
    try:
        commit = check_output(['git', 'rev-parse', '--short',
                          'HEAD']).decode('ascii').strip()
    except:
        commit = "–ù–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ö—ç—à –∫–æ–º–º–∏—Ç–∞"
    await message.reply(f"""–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω {distance_of_time_in_words(start_time, accuracy=3)}
–†–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ –≤–µ—Ä—Å–∏–∏: [{commit}](https://github.com/SatSea/Chemk-Rasp-Parser-To-Telegram/commit/{commit}) """
# –ö–µ—à: –Ω–∞ —Å–µ–≥–æ–¥–Ω—è: {"–°—É—â–µ—Å—Ç–≤—É–µ—Ç" if today_rasp.cache.currsize > 0 else "–ò–Ω–≤–∞–ª–∏–¥–∏—Ä–æ–≤–∞–Ω"}
# –Ω–∞ –∑–∞–≤—Ç—Ä–∞: {"–°—É—â–µ—Å—Ç–≤—É–µ—Ç" if tomorrow_rasp.cache.currsize > 0 else "–ò–Ω–≤–∞–ª–∏–¥–∏—Ä–æ–≤–∞–Ω"}
, parse_mode='MarkdownV2')
    create_task(message.answer_animation(
                'https://cdn.discordapp.com/attachments/878333995908222989/1048634370031882310/homer-simpson.gif'))

# @dp.message_handler(commands=["Cat", "cat"])
async def cat(message: types.Message):
    logger.info(
        f"Issued \"Cat\" from {message.from_user.username} ({message.from_user.full_name}) [{message.from_user.id}]")
    pic, type = await cat_pic()
    if type == 'mp4':
        create_task(message.reply_animation(pic))
    else:
        create_task(message.reply_photo(pic))

# @dp.message_handler(commands=["About", "about"])
async def about(message: types.Message):
    logger.info(
        f"Issued \"About\" from {message.from_user.username} ({message.from_user.full_name}) [{message.from_user.id}]")
    create_task(message.reply(
        "–£—á–∞—Å—Ç–∏–µ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ –ø—Ä–∏–Ω–∏–º–∞–ª–∏: Satsea(aka Aestas) [–ö–æ–¥ –∏ –∏–∑–Ω–∞—á–∞–ª—å–Ω–∞—è –∏–¥–µ—è], SashaGHT(aka Lysk) [–ù–µ–º–Ω–æ–≥–æ –±—É–¥—É—â–µ–≥–æ –∫–æ–¥–∞ (–¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –≥—Ä—É–ø–ø), —Ä–µ–¥–∞–∫—Ç—É—Ä–∞ —Ç–µ–∫—Å—Ç–∞ –∏ –±oÃÅ–ª—å—à–∞—è —á–∞—Å—Ç—å –Ω–∞–ø–∏—Å–∞–Ω–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞], ALLAn [–ø–æ–º–æ—â—å –≤ —Ä–∞—Å–ø—É—Ç—ã–≤–∞–Ω–∏–∏ –∏ —Ä–∞—Å—á–µ—Å—ã–≤–∞–Ω–∏–∏ —Å–ø–∞–≥–µ—Ç—Ç–∏-–∫–æ–¥–∞]\n–ö–æ—Å–≤–µ–Ω–Ω–∞—è –ø–æ–º–æ—â—å –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ: Ania [–î–æ–Ω–∞—Ç—ã –Ω–∞ –ø–µ—á–µ–Ω—å–∫–∏ –∏ –ø–∏–≤–æ, –∏ –º–æ—Ä–∞–ª—å–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞!]"))
    create_task(message.answer_animation(
                'https://cdn.discordapp.com/attachments/878333995908222989/1032677359926653008/sleepy-at-work-sleepy-kitten.gif'))

# @dp.message_handler(commands=["Today", "today"])
async def today(message: types.Message):
    try:
        rasp = await group_today_rasp()
        create_task(message.reply(rasp))
        logger.info(
            f"Issued \"Today\" from {message.from_user.username} ({message.from_user.full_name}) [{message.from_user.id}]")
    except Exception as e:
        logger.exception(
            f"{message.from_user.username} ({message.from_user.full_name}) [{message.from_user.id}] issued \"Today\", but I couldn't make and send a rasp")
        create_task(message.reply("–£ –º–µ–Ω—è –Ω–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è"))


# @dp.message_handler(commands=["Tomorrow", "tomorrow"])
async def tommorrow(message: types.Message):
    try:
        rasp = await group_tommorrow_rasp()
        create_task(message.reply(rasp))
        logger.info(
            f"Issued \"Tomorrow\" from {message.from_user.username} ({message.from_user.full_name}) [{message.from_user.id}]")
    except Exception as e:
        logger.exception(
            f"{message.from_user.username} ({message.from_user.full_name}) [{message.from_user.id}] issued \"Today\", but I couldn't make and send a rasp")
        create_task(message.reply("–£ –º–µ–Ω—è –Ω–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –∑–∞–≤—Ç—Ä–∞"))



# @dp.message_handler()
async def unknown_commnand(message: types.Message):
    create_task(message.reply('–Ø –Ω–µ –Ω–∞—à–µ–ª —Ç–∞–∫—É—é –∫–æ–º–∞–Ω–¥—É...'))
    create_task(message.answer_animation('https://cdn.discordapp.com/attachments/878333995908222989/1019257151916625930/not_found.gif'))
    logger.warning(f"{message.from_user.username} ({message.from_user.full_name}) [{message.from_user.id}] wrote \"{message.text}\", but I did not understand what he wrote")

async def register_regular_handlers(dp : Dispatcher):
    dp.register_message_handler(about, commands=["About", "about"])
    dp.register_message_handler(cat, commands=["Cat", "cat"])
    dp.register_message_handler(start, commands=["start"])
    dp.register_message_handler(status, commands=["Status", "status"])
    dp.register_message_handler(faq, commands=["FAQ", "faq"])
    dp.register_message_handler(today, commands=["Today", "today"])
    dp.register_message_handler(tommorrow, commands=["Tomorrow", "tomorrow"])
    dp.register_message_handler(unknown_commnand)
    